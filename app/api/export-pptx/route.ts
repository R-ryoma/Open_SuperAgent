import { NextRequest, NextResponse } from 'next/server';
import PptxGenJS from 'pptxgenjs';

interface SlideImage {
  imageData: string; // base64 encoded image
  width: number;
  height: number;
}

export async function POST(request: NextRequest) {
  try {
    const body = await request.json();
    const { slides, title = 'プレゼンテーション' } = body;
    
    if (!slides || !Array.isArray(slides) || slides.length === 0) {
      return NextResponse.json(
        { error: 'スライド画像が提供されていません' },
        { status: 400 }
      );
    }
    
    // PPTXオブジェクトを作成
    const pptx = new PptxGenJS();
    
    // プレゼンテーションのメタデータ設定
    pptx.author = 'AI Agent';
    pptx.company = 'Generated by AI';
    pptx.title = title;
    
    // スライドサイズを16:9に設定
    pptx.defineLayout({ name: 'LAYOUT_16x9', width: 10, height: 5.625 });
    pptx.layout = 'LAYOUT_16x9';
    
    // 各スライド画像を処理
    slides.forEach((slideImage: SlideImage, index: number) => {
      const slide = pptx.addSlide();
      
      // 背景を白に設定
      slide.background = { color: 'FFFFFF' };
      
      // スライド画像を追加
      // 画像をスライド全体に配置
      slide.addImage({
        data: slideImage.imageData,
        x: 0,
        y: 0,
        w: '100%',
        h: '100%',
        sizing: { type: 'contain', w: 10, h: 5.625 }
      });
      
      // スライド番号の追加（オプション）
      slide.addText(`${index + 1} / ${slides.length}`, {
        x: 8.5,
        y: 5.2,
        w: 1.5,
        h: 0.3,
        fontSize: 10,
        color: '666666',
        align: 'right'
      });
    });
    
    // PPTXファイルをバイナリとして生成
    const pptxBlob = await pptx.write({ outputType: 'blob' }) as Blob;
    
    // ArrayBufferに変換
    const arrayBuffer = await pptxBlob.arrayBuffer();
    
    // レスポンスヘッダーを設定してファイルを返す
    return new NextResponse(arrayBuffer, {
      status: 200,
      headers: {
        'Content-Type': 'application/vnd.openxmlformats-officedocument.presentationml.presentation',
        'Content-Disposition': `attachment; filename="${title.replace(/[^a-z0-9]/gi, '_')}.pptx"`,
      },
    });
    
  } catch (error) {
    console.error('PPTX export error:', error);
    return NextResponse.json(
      { error: 'PPTXファイルの生成に失敗しました', details: error instanceof Error ? error.message : 'Unknown error' },
      { status: 500 }
    );
  }
} 